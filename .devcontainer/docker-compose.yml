services:
  app:
    # Build the image using the Dockerfile in this directory
    build:
      context: ..
      dockerfile: .devcontainer/Dockerfile
    
    # Mount the entire project directory into the container's /workspace directory
    # 'cached' improves performance on macOS and Windows.
    volumes:
      - ..:/workspace:cached

    # Make the app service depend on the db service
    depends_on:
      - db

    # Connect the app service to the custom network
    networks:
      - dev-net

    # Add environment variables for the application to connect to the database
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=user
      - DB_NAME=dev-employee-management

    # Keep the container running indefinitely so the editor can attach to it.
    command: sleep infinity

  db:
    image: postgres:17-alpine # Warning: Using a very new version. Consider a more mature version for production.
    restart: unless-stopped
    # Mount a volume to persist database data
    volumes:
      - postgres-data:/var/lib/postgresql/data
    # Set environment variables for the database
    # Using 'trust' to allow password-less connections from the app service
    environment:
      - POSTGRES_DB=dev-employee-management
      - POSTGRES_USER=user
      - POSTGRES_HOST_AUTH_METHOD=trust
    # Connect the db service to the custom network
    networks:
      - dev-net

  pgadmin:
    image: dpage/pgadmin4
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: abcd1234
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "5050:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - dev-net
    depends_on:
      - db

# Define the named volume for data persistence
volumes:
  postgres-data:
  pgadmin-data:

# Define the custom network
networks:
  dev-net:
